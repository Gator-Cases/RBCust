REM STANDARD RBCUST - CREATED 03/30/2008
REM 5.30 Gator Cases
REM PRINT 'DIALOGUE'(0,0,80,30); ESCAPE
! 
! 
SPECIAL_VA_ASSIGNMENTS:
LET VA$[8]=UDF_BARCODE$
IF LEN(VA$[8])>14 THEN LET VA$[8]=""
IF UDF_OUTBOUNDSERIAL$="Y" THEN LET VA$[20]="2000000000"
LET VA$[38]=STR(UDF_PACK_SIZE_1)
LET VA$[39]=STR(UDF_PACK_SIZE_2); LET VA$[40]=STR(UDF_SIZE3)
LET VA$[41]=STR(UDF_SIZE4); LET VA$[42]=STR(UDF_SIZE5)
LET VA$[80]=CATEGORY1$; LET VA$[81]=CATEGORY2$; LET VA$[82]=CATEGORY3$; LET VA$[83]=CATEGORY4$
LET VA$[74]=UDF_HANDLE$
! LET VA$[68]=UDF_HTS_CODE$ ! 8/17/2023
! TRANSLATE VA$[68]," ","."
! LET VA$[68]=STP(VA$[68],3,$20$)
! IF LEN(VA$[68])>10 THEN LET VA$[68]="9999999999"
LET VA$[80]=UDF_TRUCK_SHIP$
STATIC SWKVENDORFH
IF NOT(SWKVENDORFH) THEN {
LET SWKVENDORFH=COSESSION'OPENTABLE("AP_Vendor","COMPANY")
 }
LET VA$[116]=$$
READ DATA FROM $$,REC=SWKVENDOR$ TO IOL=IOL(SWKVENDORFH)
IF NOT(NUL(PRIMARYVENDORNO$)) THEN {
READ (SWKVENDORFH,KEY=PRIMARYAPDIVISIONNO$:PRIMARYVENDORNO$,REC=SWKVENDOR$,DOM=*NEXT)
LET VA$[116]=SWKVENDOR.COUNTRYCODE$
 }
IF EXTENDEDDESCRIPTIONKEY$<>$$ THEN { ! only if Extended Desc exists
STATIC SWKEXTDESCFH
IF NOT(SWKEXTDESCFH) THEN {
LET SWKEXTDESCFH=%SYS_SS'OPENTABLE("CI_Extendeddescription","COMPANY")
 }
READ (SWKEXTDESCFH,REC=SWKED$,KEY=EXTENDEDDESCRIPTIONKEY$,DOM=*NEXT)
LET VA$[4]=MID(SWKED.EXTENDEDDESCRIPTIONTEXT$,1,100)
 } ! only if extended desc exists
TRANSLATE VA$[4]," ",";"; TRANSLATE VA$[4],$0A0120$; TRANSLATE VA$[4],$0D0120$
RETURN 
! 
! 
PICK_HEADER_ASSIGNMENTS:
LET PH$[10]="" ! CUSTOMER GROUP
LET PH$[11]="" ! LABEL TEXT
! LET PH$[19]=HDR.SHIPTONAME$
IF NOT(SWKSHIPTOFH) THEN {
LET SWKSHIPTOFH=COSESSION'OPENTABLE("SO_ShipToAddress","COMPANY")
 }
LET PH$[20]=$$
READ DATA FROM $$,REC=SWKST$ TO IOL=IOL(SWKSHIPTOFH)
IF NOT(NUL(HDR.SHIPTOCODE$)) THEN {
LET PH$[20]=SWKST.TELEPHONENO$
READ (SWKSHIPTOFH,KEY=HDR.ARDIVISIONNO$:HDR.CUSTOMERNO$:HDR.SHIPTOCODE$,REC=SWKST$,DOM=*NEXT)
 }
IF NUL(PH$[20]) THEN LET PH$[20]=SWKST.TELEPHONENO$
LET PH$[29]="" ! SHIP TIME REQUIRED
LET PH$[31]="0"  !! SWK Null out to pass integration to cloud WMS 01/12/24
IF HDR.UDF_SHIP_TODAY$="Y" THEN LET PH$[31]="9"
LET PH$[30]="" ! TRUCK ROUTE
IF HDR.UDF_BACKORDER_PROGRAM$="Y" THEN { LET PH$[31]="4" } ! PRIORITY  ! 01/19/23
IF HDR.UDF_FREIGHT_THIRD_PARTY_BILL$="Y" THEN LET PH$[32]="T"
! LET PH$[32]="" ! SHIP PAYMENT TYPE (C, R, P, T)
IF LEN(HDR.UDF_3RD_PARTY_ACCT$)>0 THEN {
LET PH$[34]=HDR.UDF_3RD_PARTY_ACCT$ ! SHIP PAY ACCOUNT NUMBER
 }
LET PH$[38]=""
LET PH$[39]=HDR.UDF_SHIP_COMPLETE$
LET PH$[42]=MID(HDR.UDF_DC_NOTES$,1,50)
LET PH$[43]=MID(HDR.UDF_DC_NOTES$,51,50)
LET PH$[49]="" ! COST CENTER
LET PH$[52]="" ! TRUCK STOP
LET PH$[53]="" ! TRUCK DELIVERY TIME
LET PH$[66]="" ! SHIPMENT OPTIONS
IF HDR.UDF_LIFTGATE_REQD$="Y" THEN LET PH$[66]="L"
IF HDR.UDF_SIGNATURE_REQUIRED$="Y" THEN LET PH$[66]=PH$[66]+"S"
LET PH$[67]="" ! SHIPMENT ACTION
LET PH$[68]="" ! SHIPMENT MESSAGE
IF POS(HDR.TERMSCODE$="02 04 23") THEN LET PH$[70]="Y"
LET PH$[71]="" ! SHIP CONSOLIDATION
LET PH$[74]="" ! SHIP TO FAX NUMBER
LET PH$[75]="" ! WAVE NUMBER
LET PH$[76]="" ! REPLENISHMENT GOURP
LET PH$[77]="" ! CUSTOMER UDF1
LET PH$[78]="" ! CUSTOMER UDF2
LET PH$[79]="" ! CUSTOMER UDF3
LET PH$[80]="" ! BUSINESS TELEPHONE NUMBER
LET PH$[81]=HDR.UDF_TRACKING_CONFIRM_EMAIL$ ! EMAIL ADDRESS
LET PH$[82]="" ! CUSTOMER UDF4
LET PH$[83]="" ! CUSTOMER UDF5
LET PH$[84]="" ! CREDIT CARD STATUS
LET PH$[85]="" ! TOTAL INVOICE AMOUNT TO CHARGE
LET PH$[86]="" ! TOTAL TAX1 TO CHARGE
LET PH$[87]="" ! TOTAL TAX2 TO CHARGE
LET PH$[88]="" ! TOTAL TAX3 TO CHARGE
LET PH$[89]="" ! TOTAL TAX4 TO CHARGE
LET PH$[90]="" ! TOTAL FREIGHT TO CHARGE
LET PH$[91]="" ! TOTAL SHIPPING & HANDLING TO CHARGE
LET PH$[92]="" ! PROMO AMOUNT
LET PH$[93]="" ! PROMO DISCOUNT
LET PH$[94]="" ! END-OF-LINE PROCESS
LET PH$[95]="" ! PURCHASE ORDER NUMBER
LET PH$[96]="" ! SPECIAL 1
LET PH$[97]="" ! SPECIAL 2
LET PH$[98]="" ! SPECIAL 3
LET PH$[99]="" ! MINIMUM DAYS TO EXPIRY
LET PH$[100]="" ! MIXED LOT/EXPIRY INDICATOR
LET PH$[101]="" ! EXTRA1
LET PH$[102]=HDR.UDF_TC_USER_1$ ! EXTRA2
LET PH$[103]=HDR.UDF_CONSOLIDATE$ ! EXTRA3  03/10/21
LET PH$[105]="" ! EXTRA5
LET PH$[106]="" ! HANDLE
LET PH$[108]="" ! CARTON TYPE
LET PH$[109]="" ! WAREHOUSE TRANSIT LOCATION
LET PH$[110]="" ! WAREHOUSE DESITINATION LOCATION
LET PH$[111]="" ! DESTINATION BIN LOCATION
LET PH$[112]="" ! PLANNER ID
LET PH$[113]="" ! CONTROL BUYER ID
LET PH$[114]="" ! SCHEDULED START DATE
LET PH$[115]="" ! FINISHED GOOD ITEM NUMBER
LET PH$[116]="" ! FINISHED GOOD DESCRIPTION
LET PH$[117]="" ! FINISHED GOOD CLASS ID
LET PH$[118]="" ! MO ENDING QUANTITY
LET PH$[119]="" ! FIRST WORK CENTER
RETURN 
! 
PICK_DETAIL_ASSIGNMENTS:
! --- Begin added 01/26/24 Used for new Koerber Kitting PW record assignments---
KoerberBackOrderNo$=PD$[6] 
! --- END added 01/26/24 Used for new Koerber Kitting PW record assignments---
IF CAPABLETOMAKE THEN LET PD$[18]=STR(CAPABLETOMAKE) ! Gator 07/04/21   See SPECIAL_SOD_DONT_SEND
IF CAPABLETOMAKE THEN LET PD$[19]=STR(CAPABLETOMAKE) ! Gator 07/04/21   See SPECIAL_SOD_DONT_SEND
! 
! ---- begin 04/25/22 Addition ----
STATIC CSWKCIITEMFH ! 
IF NOT(CSWKCIITEMFH) THEN { ! 
LET CSWKCIITEMFH=%SYS_SS'OPENTABLE("CI_ITEM","COMPANY")
 }
READ (CSWKCIITEMFH,KEY=ITEMCODE$,REC=SWKMAP$) ! 
LET PD$[51]=STR(SWKMAP.UDF_MAP:"#####0.00"); LET PD$[51]=STP(PD$[51],L)
! ---- end 04/25/22 Addition ----
! 
LET PD$[4]=ARDIVISIONNO$+CUSTOMERNO$
IF LEN(WRK.EXTENDEDDESCRIPTIONTEXT$)>0 THEN {
LET PD$[14]=MID(WRK.EXTENDEDDESCRIPTIONTEXT$,1,100)
 }
TRANSLATE PD$[14]," ",";"; TRANSLATE PD$[14],$0A0120$; TRANSLATE PD$[14],$0D0120$
LET PD$[72]=""
LET PD$[73]=""
LET PD$[74]=""
IF WRK.ITEMCODE$="/C" THEN {
LET PD$[14]=MID(WRK.COMMENTTEXT$,1,100)
TRANSLATE PD$[14]," ",";"; TRANSLATE PD$[14],$0A0120$; TRANSLATE PD$[14],$0D0120$
LET PD$[2]=HDR.WAREHOUSECODE$
 } ! ONLY IF EXTENDED DESC EXISTS
IF LEN(WRK.EXTENDEDDESCRIPTIONTEXT$)>0 THEN {
LET PD$[14]=MID(WRK.EXTENDEDDESCRIPTIONTEXT$,1,100)
TRANSLATE PD$[14]," ",";"; TRANSLATE PD$[14],$0A0120$; TRANSLATE PD$[14],$0D0120$
 } ! ONLY IF EXTENDED DESC EXISTS
! if wrk.itemcode$="AHW-4026" THEN PRINT 'DIALOGUE'(0,0,80,30); ESCAPE
IF NOT(NUL(SALESKITLINEKEY$)) AND EXPLODEDKITITEM$="Y" AND SALESKITLINEKEY$=LINEKEY$ THEN { LET PD$[76]="2" } ! 05/04/21
! 
! 
! 
! 
! 
! 
RETURN 
! 
! 
! 
WRITE_PW_RECORD: ! KIT ROUTINE ADDED 01/28/21
! PREINPUT -1301; ESCAPE
PARENT_QUANTITY$ = "100"
IF NUL(PARENT_QUANTITY$) OR PARENT_QUANTITY$="0" THEN RETURN ! GATOR
STATIC CSWKCIITEMFH ! swk tml 03/14/13
IF NOT(CSWKCIITEMFH) THEN { ! swk tml 03/14/13
LET CSWKCIITEMFH=%SYS_SS'OPENTABLE("CI_ITEM","COMPANY") ! swk tml 03/14/13
 } ! swk tml 03/14/13
READ (CSWKCIITEMFH,KEY=ITEMCODE$,REC=SWKIT$) ! swk tml 03/14/13
DIM PW$[40]
IF ORDERTYPE$="S" THEN LET COMP_PICK_QUAN=(QUANTITYORDERED-QUANTITYBACKORDERED)
IF ORDERTYPE$="B" THEN LET COMP_PICK_QUAN=QUANTITYBACKORDERED
LET PW$[1]="PW",PW$[2]=WRK.WAREHOUSECODE$,PW$[3]=ARDIVISIONNO$+CUSTOMERNO$,PW$[4]=PAD(SALESORDERNO$,7),PW$[5]=KoerberBackOrderNo$,PW$[9]=ITEMCODE$,PW$[11]=ITEMCODEDESC$,PW$[7]=PW$[4] ! 01/26/24
! former (2nd) iteration LET PW$[1]="PW",PW$[2]=WRK.WAREHOUSECODE$,PW$[3]=ARDIVISIONNO$+CUSTOMERNO$,PW$[4]=PAD(SALESORDERNO$,7),PW$[5]=PW$[9]=ITEMCODE$,PW$[11]=ITEMCODEDESC$
! former (1st) iteration LET PW$[1]="PW",PW$[2]=WRK.WAREHOUSECODE$,PW$[3]=ARDIVISIONNO$+CUSTOMERNO$,PW$[4]=COSESSION'COMPANYCODE$+PAD(SALESORDERNO$,7),PW$[9]=ITEMCODE$,PW$[11]=ITEMCODEDESC$,PW$[7]=PW$[4]
IF WRK.UDF_IS_WORKORDER$="Y" THEN LET PW$[7]="W"+PW$[7] ! SAV 12/20/16
LET PW$[6]=PARENT_LINE$,PWCTR=PWCTR+1; REM >>>>>> this field echos back to MT field 34 <<<<<<<<<
LET PW$[12]=STR(COMP_PICK_QUAN/NUM(PARENT_QUANTITY$)),PW$[13]="1",PW$[27]=COSESSION'COMPANYCODE$
! not for Gator LET BILLCOMPONENTKEY$=STR(NUM(LINEKEY$)-1:"0000000000") ! SAV expecting:1) Parent Item is first line of sales order. 2) One Parent per salesorder
! not for Gator LET PW$[29]=BILLCOMPONENTKEY$
! not for Gator LET PW$[30]=SALESORDERNO$
REM RETURN
BUILD_PW_RECORD: ! 
FOR LOOP=1 TO 39
LET PW$[LOOP]=PW$[LOOP]+DEL$
NEXT LOOP
FOR LOOP2=1 TO 40
LET PWREC$=PWREC$+PW$[LOOP2]
NEXT LOOP2
LET E1=RB_CHAN; PRINT (E1)PWREC$; DIM PW$[40]; LET PWREC$=""
RETURN 
! 
! 
! 
SPECIAL_SOH_DONT_SEND: ! GATOR 04/14/20
STATIC SWKARCUSTOMERFH
STATIC SWKITEMWAREHOUSEFH
IF NOT(SWKARCUSTOMERFH) THEN {
LET SWKARCUSTOMERFH=%SYS_SS'OPENTABLE("AR_CUSTOMER","COMPANY")
 }
LET TST.CREDITHOLD$=$$; READ (SWKARCUSTOMERFH,REC=TST$,KEY=ARDIVISIONNO$:CUSTOMERNO$,DOM=*NEXT)
IF TST.CREDITHOLD$="Y" THEN { LET SOH_DONT_SEND=1 }
IF hdr.UDF_SPEC_RB_HOLD$="Y" THEN { LET SOH_DONT_SEND=1 } ! 01/19/23
RETURN 
SPECIAL_SOD_DONT_SEND: ! 
! ><><><>< STATIC CRBSVR_CHAN ! 07/04/21
STATIC SWKITEMWAREHOUSEFH ! 07/04/21
IF NOT(SWKITEMWAREHOUSEFH) THEN {
LET SWKITEMWAREHOUSEFH=%SYS_SS'OPENTABLE("IM_ItemWarehouse","COMPANY")
 }
! ---BEGIN---- Gator CheckComponent On Hand to change Parent Quantity 07/04/21---------
STATIC USEDTHISSESSIONFH ! 02/10/22
IF NOT(USEDTHISSESSIONFH) THEN { ! 02/10/22
LET USEDTHISSESSIONFH=HFN ! 02/10/22
OPEN (USEDTHISSESSIONFH)"*memory*" ! 02/10/22
 } ! 02/10/22
STATIC GATORSODFH
STATIC GATORSOD2FH ! 02/20/22
IF NOT(GATORSODFH) THEN {
LET GATORSODFH=%SYS_SS'OPENTABLE("SO_SalesOrderDetail","COMPANY")
 }
IF NOT(GATORSOD2FH) THEN { ! 02/20/22
LET GATORSOD2FH=%SYS_SS'OPENTABLE("SO_SalesOrderDetail","COMPANY") ! 02/20/22
 } ! 02/20/22
LET CAPABLETOMAKE=0
IF EXPLODEDKITITEM$="Y" AND SALESKITLINEKEY$=LINEKEY$ THEN { ! this is a Parent detail Line
LET SAVKITLINEKEY$=LINEKEY$
IF ORDERTYPE$="S" THEN LET SAVPARENTQTY=(QUANTITYORDERED-QUANTITYBACKORDERED) ! 10/28/21 Kit Backorders
IF ORDERTYPE$="B" THEN LET SAVPARENTQTY=QUANTITYBACKORDERED ! 10/28/21 Kit Backorders
! LET SAVPARENTQTY=QUANTITYORDERED  ! 10/28/21 Kit Backorders
LET CAPABLETOMAKE=SAVPARENTQTY
SELECT *,REC=GATOR$ FROM GATORSODFH BEGIN SALESORDERNO$:LINEKEY$ END SALESORDERNO$:$FE$ WHERE GATOR.EXPLODEDKITITEM$="N" AND GATOR.SALESKITLINEKEY$<>GATOR.LINEKEY$
IF GATOR.SALESKITLINEKEY$<>SAVKITLINEKEY$ THEN { BREAK }
! -------------BEGIN--- Get WMS Unallocated Available Qty --------07/04/21------------
! 
LET WMSQTYAVAILABLE=0
! ><><><><IF NOT (CRBSVR_CHAN) THEN { ! Old ODBC connection 2/7/24
! LET CRBSVR_CHAN=HFN; OPEN (CRBSVR_CHAN,ERR=*NEXT)"[odb]A1Warehouse;;"  !Old ODBC connection 2/7/24
static CONN
DEF OBJECT CONN,"ADODB.Connection"
ConnServer$="10.162.10.219"
ConnUserName$="Gatorco"
ConnPassword$="9Wr4JU$CFtBx*TL49oZbhZgb"
ConnDatabase$="KWarehouseEdge"
ConnStr$="DRIVER={SQL Server};SERVER="+ConnServer$+";UID="+ConnUsername$+";PWD="+ConnPassword$+";DATABASE="+ConnDatabase$
CONN'ConnectionString$=ConnStr$
CONN'Provider$="sqloledb.1"
CONN'CommandTimeout=30
CONN'OPEN(ConnStr$, ERR=*NEXT)

! Koerber$=fid(crbsvr_chan)
! msgbox(Koerber$)

 ! ><><><>< } ! !Old ODBC connection 2/7/24
LET Y$=$$
! Replaced with new view 07/06/22 LET CMD$="SELECT SUM(TotalUnalloc) FROM KWarehouseEdge..A1W_QTY WHERE PRODUCT ="+"'"+GATOR.ITEMCODE$+"'"+"AND WAREHOUSE="+"'"+GATOR.WAREHOUSECODE$+"'"
LET CMD$="SELECT AVAIL_QTY FROM KWarehouseEdge..A1W_QTY_NEW WHERE EXTENDED ="+"'"+WRK.ITEMCODE$+"'"+"AND WAREHOUSE="+"'"+WRK.WAREHOUSECODE$+"'"
rec=CONN'Execute(cmd$) ! CMD$ is set in RBCUST in the proper place"
IF WRK.WAREHOUSECODE$="033" AND MID(WRK.ITEMCODE$,1,1)<>"/"THEN {Y$=rec'fields("Avail_qty")'value$}
Drop Object CONN
CONN=0

! MSGBOX(Y$)
! LET Y$="700" ! ----------- Dummy line for testing without a WMS DATABASE --------------
LET UTS.USEDTHISSESSION=0
READ (USEDTHISSESSIONFH,KEY=GATOR.ITEMCODE$+GATOR.WAREHOUSECODE$,DOM=*NEXT)UTS.ITEMCODE$,UTS.WAREHOUSECODE$,UTS.USEDTHISSESSION
LET Y$=STR(NUM(Y$)-UTS.USEDTHISSESSION)
IF NOT(NUL(Y$)) THEN {
! ------ Reserve ------ 10/02/22
! ><><><GOSUB _GET_RESERVE
! ---- end reserve ---- 10/02/22
LET WMSQTYAVAILABLE=NUM(Y$) !+RES.UDF_RESERVE_QUANTITY ! reserve 10/02/22
! Not Here. Later WRITE (USEDTHISSESSIONFH,KEY=GATOR.ITEMCODE$+GATOR.WAREHOUSECODE$)GATOR.ITEMCODE$,GATOR.WAREHOUSECODE$,UTS.USEDTHISSESSION+WMSQTYAVAILABLE
 }
! 
! ------ Test (non-WMS environment replacement of A1W Lookup -----
! ><><><
! ><><><READ (SWKITEMWAREHOUSEFH,REC=SWKIW$,KEY=GATOR.ITEMCODE$:GATOR.WAREHOUSECODE$)
! ><><><IF ORDERTYPE$="S" THEN {
! ><><><LET QO=GATOR.QUANTITYORDERED-GATOR.QUANTITYBACKORDERED
! ><><><LET WMSQTYAVAILABLE=SWKIW.QUANTITYONHAND-SWKIW.QUANTITYONSALESORDER
! ><><>< }
! ><><><IF ORDERTYPE$="B" THEN {
! ><><><LET QO=GATOR.QUANTITYBACKORDERED
! ><><><LET WMSQTYAVAILABLE=SWKIW.QUANTITYONHAND-SWKIW.QUANTITYONBACKORDER
! ><><>< }
! ><><><
! ------ Test non-WMS environment replacement of A1W Lookup -----
! 
! --------------END Get WMS Unallocated Available Qty --------07/04/21----------
IF ORDERTYPE$="S" THEN LET GATOR.QUANTITYORDERED=GATOR.QUANTITYORDERED-GATOR.QUANTITYBACKORDERED ! 10/28/21 Kit Backorders
IF ORDERTYPE$="B" THEN LET GATOR.QUANTITYORDERED=GATOR.QUANTITYBACKORDERED ! 10/28/21 Kit Backorders
IF WMSQTYAVAILABLE<=0 THEN { LET SOD_DONT_SEND=1; BREAK }
IF WMSQTYAVAILABLE>=GATOR.QUANTITYORDERED THEN { CONTINUE }
IF WMSQTYAVAILABLE<GATOR.QUANTITYORDERED THEN {
! figure out how many finished Kits Can you make with what you've Got
LET REQQTYPERPARENT=GATOR.QUANTITYORDERED/SAVPARENTQTY ! 
IF INT(WMSQTYAVAILABLE/REQQTYPERPARENT)<CAPABLETOMAKE THEN {
LET CAPABLETOMAKE=100
! INT(WMSQTYAVAILABLE/REQQTYPERPARENT) ------------Kit's not sending without connection to A1Warehouse; Replace this with "100" in previous line to revert 1/18/2024
 }
LET PARENT_QUANTITY$=STR(CAPABLETOMAKE)
 }
IF CAPABLETOMAKE=0 THEN { LET SOD_DONT_SEND=0; BREAK }
! need to address the SKIPPING of PW record creation if Parent needs to be reduced to zero.
! if just reduced but NOT to zero, regular logic will hold up.
NEXT RECORD 
! !!!!! Added 02/21/22 ---------------------------
SELECT *,REC=GATOR2$ FROM GATORSOD2FH BEGIN SALESORDERNO$:LINEKEY$ END SALESORDERNO$:$FE$ WHERE GATOR.EXPLODEDKITITEM$="N" AND GATOR.SALESKITLINEKEY$<>GATOR.LINEKEY$
LET REQQTYPERPARENT2=GATOR2.QUANTITYORDERED/SAVPARENTQTY ! 
LET COMPUSEDTHISSESSION=REQQTYPERPARENT2*CAPABLETOMAKE
READ (USEDTHISSESSIONFH,KEY=GATOR2.ITEMCODE$+GATOR2.WAREHOUSECODE$,DOM=*NEXT)UTS2.ITEMCODE$,UTS2.WAREHOUSECODE$,UTS2.USEDTHISSESSION
WRITE (USEDTHISSESSIONFH,KEY=GATOR2.ITEMCODE$+GATOR2.WAREHOUSECODE$)GATOR2.ITEMCODE$,GATOR2.WAREHOUSECODE$,UTS2.USEDTHISSESSION+COMPUSEDTHISSESSION
NEXT RECORD 
! !!!!! Added 02/21/22 ------------------------------
IF NOT(NUL(SALESKITLINEKEY$)) AND EXPLODEDKITITEM$="Y" AND SALESKITLINEKEY$=LINEKEY$ THEN { RETURN  } ! don't check A1W Available For Parent ! moved up from below02/10/22
IF NOT(NUL(SALESKITLINEKEY$)) AND EXPLODEDKITITEM$="N" THEN { RETURN  } ! don't check A1W Available For Component
 } ! this is a Parent detail Line ! moved up from below 02/10/22
! ----END----- Gator CheckComponent On Hand to change Parent Quantity 07/04/21
! 
! !!!!!!!!! begin-DREAD LOG - 05/09/22 !!!!!!!!
! STATIC DREADLOGFH
! STATIC DREADLINE
! IF POS("G"=WRK.ITEMCODE$) THEN { LET DREADLINE=1 } ELSE { LET DREADLINE=0 }
! IF NOT(DREADLOGFH) THEN {
! LET E1$="../home/textout/DreadLog"+%S$+".txt"; SERIAL E1$,ERR=*NEXT
! LET DREADLOGFH=HFN
! OPEN (DREADLOGFH)E1$
! }
! !!!!!!!!! end-DREAD LOG - 05/09/22 !!!!!!!!
IF ORDERTYPE$="S" THEN LET TEMP=QUANTITYORDERED-QUANTITYBACKORDERED
IF ORDERTYPE$="B" THEN LET TEMP=QUANTITYBACKORDERED
LET TEMP=INT(TEMP) ! Drop Fraction 03/23/23										   
IF TEMP=0 THEN LET SOD_DONT_SEND=1
! 05/03/21
! moved up 02/10/22 IF NOT(NUL(SALESKITLINEKEY$)) AND EXPLODEDKITITEM$="Y" AND SALESKITLINEKEY$=LINEKEY$ THEN { RETURN  } ! don't check A1W Available For Parent
! moved up 02/10/22 IF NOT(NUL(SALESKITLINEKEY$)) AND EXPLODEDKITITEM$="N" THEN { RETURN  } ! don't check A1W Available For Component
! 05/03/21
! ----- 01/07/20
! ><><><
! >>>>>RETURN ; this was here on 2/4/2022 I removed it believing it should not be there.  It Shouldn't. I moved it UP 02/10/22
! ><><><
! ><><><> STATIC CRBSVR_CHAN
LET A1W_AVAIL=0
LET A1W_OH=0
! ><><><>< IF NOT(CRBSVR_CHAN) THEN {
STATIC CONN
DEF OBJECT CONN,"ADODB.Connection"
ConnServer$="10.162.10.219"
ConnUserName$="Gatorco"
ConnPassword$="9Wr4JU$CFtBx*TL49oZbhZgb"
ConnDatabase$="KWarehouseEdge"
ConnStr$="DRIVER={SQL Server};SERVER="+ConnServer$+";UID="+ConnUsername$+";PWD="+ConnPassword$+";DATABASE="+ConnDatabase$
CONN'ConnectionString$=ConnStr$
CONN'Provider$="sqloledb.1"
CONN'CommandTimeout=30
CONN'OPEN(ConnStr$, ERR=*NEXT)
LET X$=$$
! rpl with new view 07/26/22 LET CMD$="SELECT SUM(TotalQuantity) FROM KWarehouseEdge..A1W_QTY WHERE PRODUCT ="+"'"+WRK.ITEMCODE$+"'"+"AND WAREHOUSE="+"'"+WRK.WAREHOUSECODE$+"'"
! LET CMD$="SELECT AVAIL_QTY FROM KWarehouseEdge..A1W_QTY_NEW WHERE EXTENDED ="+"'"+WRK.ITEMCODE$+"'"+"AND WAREHOUSE="+"'"+WRK.WAREHOUSECODE$+"'"
! READ (CRBSVR_CHAN,KEY=CMD$,ERR=*NEXT)X$
LET Y$=$$
LET CMD$="SELECT AVAIL_QTY FROM KWarehouseEdge..A1W_QTY_NEW WHERE EXTENDED ="+"'"+WRK.ITEMCODE$+"'"+"AND WAREHOUSE="+"'"+WRK.WAREHOUSECODE$+"'"
rec=CONN'Execute(cmd$) ! CMD$ is set in RBCUST in the proper place"
IF WRK.WAREHOUSECODE$="010" THEN {Y$="0"} 
IF WRK.WAREHOUSECODE$="AMZ" THEN {Y$="100"}
IF WRK.WAREHOUSECODE$="001" THEN {Y$="100"}
IF WRK.WAREHOUSECODE$="33B" THEN {Y$="100"}
IF WRK.WAREHOUSECODE$="IT3" THEN {Y$="100"}
IF MID(WRK.ITEMCODE$,1,1)="/" THEN {Y$="0"}
IF WRK.WAREHOUSECODE$="033" AND MID(WRK.ITEMCODE$,1,1)<>"/"THEN {Y$=rec'fields("Avail_qty")'value$}
Drop Object CONN
CONN = 0
IF %SYS_SS'COMPANYCODE$="ABC" THEN LET Y$="2500" ! ----------- Dummy line for testing without a WMS DATABASE --------------
LET VIEWY$=Y$
! PREINPUT -1301; ESCAPE
! remmed  02/10/22 IF NOT(NUL(X$+Y$)) THEN {
! !!!!!!!!!!!
LET UTS.USEDTHISSESSION=0 ! 02/10/22
READ (USEDTHISSESSIONFH,KEY=ITEMCODE$+WAREHOUSECODE$,DOM=*NEXT)UTS.ITEMCODE$,UTS.WAREHOUSECODE$,UTS.USEDTHISSESSION ! 02/10/22
LET Y$=STR(NUM(Y$)-UTS.USEDTHISSESSION) ! 02/10/22
IF NOT(NUL(Y$)) THEN { ! 02/10/22
! !!!!!!!!!!!
! ------ Reserve ------ 10/02/22
! ><><><GOSUB _GET_RESERVE
! ---- end reserve ---- 10/02/22
LET A1W_AVAIL=NUM(Y$) ! -RES.UDF_QTY_RESERVED ! reserve 10/02/22
LET A1W_OH=NUM(X$)
LET A1W_AVAIL=INT(A1W_AVAIL) ! Drop Fraction 03/23/23													 
 }
! -----BEGIN 01/31/21 TML SWK
IF DREADLINE AND A1W_AVAIL<=0 THEN PRINT (DREADLOGFH)SALESORDERNO$+","+WRK.ITEMCODE$+","+STR(TEMP)+","+VIEWY$+","+Y$+","+STR(A1W_AVAIL)+","+"NOT SENT" ! dreadlog 05/09/22
IF A1W_AVAIL<=0 THEN LET SOD_DONT_SEND=1; RETURN 
IF A1W_AVAIL<TEMP THEN { ! Avail<Qty Ordered
IF WRK.UDF_SHIPFULLLINE$="Y" THEN { ! If Only Ship Complete
LET SOD_DONT_SEND=1
 } ELSE { ! If Only Ship Complete
IF ORDERTYPE$="S" THEN LET QUANTITYORDERED=A1W_AVAIL; LET QUANTITYBACKORDERED=0
IF ORDERTYPE$="B" THEN LET QUANTITYBACKORDERED=A1W_AVAIL
WRITE (USEDTHISSESSIONFH,KEY=ITEMCODE$+WAREHOUSECODE$)ITEMCODE$,WAREHOUSECODE$,UTS.USEDTHISSESSION+A1W_AVAIL
 } ! If Only Ship Complete
 } ELSE { ! if avail> Temp
IF ORDERTYPE$="S" THEN LET QUANTITYORDERED=TEMP; LET QUANTITYBACKORDERED=0
IF ORDERTYPE$="B" THEN LET QUANTITYBACKORDERED=TEMP
WRITE (USEDTHISSESSIONFH,KEY=ITEMCODE$+WAREHOUSECODE$)ITEMCODE$,WAREHOUSECODE$,UTS.USEDTHISSESSION+TEMP
! ------ Reserve ------ 10/02/22
! ><><><GOSUB _UPDATE_RESERVE
! ---- end reserve ---- 10/02/22
 } ! Avail<Qty Ordered
IF DREADLINE AND NOT(SOD_DONT_SEND) THEN PRINT (DREADLOGFH)SALESORDERNO$+","+WRK.ITEMCODE$+","+STR(TEMP)+","+VIEWY$+","+Y$+","+STR(A1W_AVAIL)+","+" SENT" ! dreadlog 05/09/22
! -----end 01/31/21 TML SWK
! ----- end 01/07/20
RETURN 
! 
TRANSLATE_MISCCONF_FIELDS:
RETURN 
! 
! 
TRANSLATE_PICKCONF_FIELDS:
RETURN 
! 
! 
TRANSLATE_RECVCONF_FIELDS:
RETURN 
! 
TRANSLATE_MISCCONF_COMPANY:
IF NUL(XF$[33]) AND XF$[1]="MT" THEN LET XF$[33]="GAD" ELSE IF XF$[1]="ST" THEN LET XF$[2]="GAD"
RETURN 
! 
RECEIVE_HEADER_ASSIGNMENTS:
LET RH$[10]=UDF_INSTRUCTION1$
LET RH$[11]=UDF_INSTRUCTION2$
LET RH$[12]=UDF_INSTRUCTION3$
LET RH$[13]=UDF_INSTRUCTION4$
LET RH$[14]=UDF_INSTRUCTION5$
LET RH$[15]=UDF_INSTRUCTION6$
LET RH$[16]=UDF_INSTRUCTION7$
RETURN 
! 
! 
RECEIVE_DETAIL_ASSIGNMENTS:
IF LEN(WRK.EXTENDEDDESCRIPTIONTEXT$)>0 THEN {
LET RD$[9]=MID(WRK.EXTENDEDDESCRIPTIONTEXT$,1,100)
TRANSLATE RD$[9]," ",";"; TRANSLATE RD$[9],$0A0120$; TRANSLATE RD$[9],$0D0120$
 } ! ONLY IF EXTENDED DESC EXISTS
RETURN 
! 
TRANSLATE_MISCCONFMT_FIELDS: ! ALL Misconf records SHOULD be Adjustments NOT Issues.  tml 02/22/13
LET ADJSUBTYPES$="BS CC IU RE MA DF DG" ! ----- this should include ALL possible A1W Adjustment subtypes that could come back in MISCCONFs
RETURN 
! 
TRANSLATE_XFERCONF_FIELDS:
RETURN 
! 
! 
FREIGHT_TN_CUSTOM:
! Example of a routine to change how freight is handled based on a SO Hdr UDF
! IF SO.UDF_CHARGE_FRT$="N" THEN {
! LET SWKTMP=COINVOICEBUS'SETVALUE("UDF_UNCHARGED_FREIGHT",CRB_FREIGHT)
! LET CRB_FREIGHT=0 }
! LET CTOT_WEIGHT=RBTN.WEIGHT; LET CRB_FREIGHT=RBTN.FREIGHTAMT
! STATIC SWKSOBUSOBJHANDLE
! IF NOT(SWKSOBUSOBJHANDLE) THEN GOSUB GET_BUS_OBJ_HANDLE
! SWKSOBUSOBJHANDLE'SETKEYVALUE("SALESORDERNO$",SALESORDERNO$)
! SWKSOBUSOBJHANDLE'SETKEY()
! SWK_FREIGHT=0; SWKSOBUSOBJHANDLE'GETVALUE("FREIGHTAMT",SWK_FREIGHT)
! IF SWK_FREIGHT THEN CRB_FREIGHT=SWK_FREIGHT ! added _ to crb_freight tmll 06/14/16
STATIC SWKSOBUSOBJHANDLE
IF NOT(SWKSOBUSOBJHANDLE) THEN GOSUB GET_BUS_OBJ_HANDLE
SWKSOBUSOBJHANDLE'SETKEYVALUE("SALESORDERNO$",SALESORDERNO$)
SWKSOBUSOBJHANDLE'SETKEY()
SWKSOBUSOBJHANDLE'GETVALUE("ShipVia$",SO_SHIPVIA$)
SWKSOBUSOBJHANDLE'GETVALUE("ARDivisionNo$",SO_DIVISION$)
SWKSOBUSOBJHANDLE'GETVALUE("FreightAmt",SO.FREIGHTAMOUNT)
LET CTOT_WEIGHT=PREVCARTONWEIGHT ! keep clobbering aggregate because of a1 ship which ignores up_ship_tot
LET CTOT_FREIGHT=PREVCARTONFREIGHT
LET HOLD_FRT=CTOT_FREIGHT ! RBTN.FREIGHTAMT replaced with PREVCARTONFREIGHT TML 05/29/15 !
! LET HOLD_FRT=CRB_FREIGHT ! (CHANGED BY DMH 04-10-2015)
LET CRB_FREIGHT=0
IF MID(SO_SHIPVIA$,1,2)="C-" THEN LET HOLD_FRT=0
IF MID(SO_SHIPVIA$,1,3)="FR-" THEN LET HOLD_FRT=0
IF SO_SHIPVIA$="FEDEX FREE" THEN LET HOLD_FRT=0
IF SO_SHIPVIA$="WILL CALL" THEN LET HOLD_FRT=0
IF SO_SHIPVIA$="TRUCK" THEN LET HOLD_FRT=0
SWITCH SO_DIVISION$
CASE "02"
LET HOLD_FRT=HOLD_FRT*1.20
BREAK
CASE "04"
LET HOLD_FRT=HOLD_FRT*1.20
BREAK
CASE "06"
LET HOLD_FRT=HOLD_FRT*1.20
BREAK
DEFAULT 
LET HOLD_FRT=HOLD_FRT*1.15
BREAK
END SWITCH 
LET CRB_FREIGHT=HOLD_FRT
! IF SO.FREIGHTAMOUNT THEN { LET CRB_FREIGHT=SO.FREIGHTAMOUNT }
RETURN 
GET_BUS_OBJ_HANDLE: LET SWKSOOBJFOUND=0
FOR SWKSOBUSOBJHANDLE=100001 TO TCB(39)
IF UCS(SWKSOBUSOBJHANDLE'_CLASS$)="SO_SALESORDER_BUS" THEN { LET SWKSOOBJFOUND=1; BREAK }
NEXT SWKSOBUSOBJHANDLE
IF NOT(SWKSOOBJFOUND) THEN {
LET SWKSOBUSOBJHANDLE=NEW("SO_salesorder_bus",%SYS_SS)
 }
RETURN 
! 
SPECIAL_CARTON_TN_ASSIGNMENTS:
IF XF$[42]=XF$[101] THEN { LET RB.TRACKINGID$=PAD(XF$[33],30) } ELSE { LET RB.TRACKINGID$=PAD(XF$[46],30) }
IF RB.WEIGHT>999999 THEN LET RB.WEIGHT=0
RETURN 
! 
WRITE_SO_UDFS_FROM_PICKCONF: ! PRINT 'DIALOGUE'(0,0,80,30); ESCAPE
LET RBCLIENTFILE$="C"+RBCOMP$+"SO_SALESORDERHEADERFH"
READ (VIN(RBCLIENTFILE$),REC=RB1$,KEY=RB.SALESORDERNO$)
!LET RB1.UDF_RBUDF1$=XF$[106]
LET RB1.UDF_ASN$=XF$[106]  ! Added for Amazon ARN 3/22/2023
LET RB1.UDF_RBUDF2$=XF$[107]
LET RB1.UDF_TRAILERNO$=XF$[110]
LET RB1.UDF_RB_CARRIER_USED$=XF$[34]
LET RB1.UDF_LOAD_ID$=XF$[106]
LET RB1.UDF_A1W_FREIGHT_COST=NUM(XF$[39])
WRITE (VIN(RBCLIENTFILE$),REC=RB1$)
RETURN 
! 
SPECIAL_ASN_NUMBER_CONSTRUCTION:
IF XF$[3]="34AMAZON" THEN ASN$=XF$[4] ! Added to separate one SO for one ASN for Amazon 07/28/23
RETURN 
SET_CLEAR_SOHEADER_FLAGS: ! called from WRITE() Method of SO2549_SalesOrder_Bus Conditional on coming from StartProgram SO_SalesJournal_ui (i.e. Backordering)
! escape
! _obj'setvalue("PrintPickingSheets$","Y")
! _OBJ'Setvalue("UDF_SENT_TO_RB$","N")
RETURN 
! 
AUTO_UPLOAD_DO_NOT_SEND_CREDIT_HOLD: ! 05/10/22 from SO254_RBAUTOUPLOAD_UI
LET DONOTSENDCREDITHOLD=0
IF NOT(NUL(ARDIVISIONNO$+CUSTOMERNO$)) THEN {
READ (CCHARCUSTOMERFH,REC=CH$,KEY=ARDIVISIONNO$:CUSTOMERNO$)
IF CH.CREDITHOLD$="Y" THEN LET DONOTSENDCREDITHOLD=1
 }
RETURN 

SPECIAL_EC_AI_ASSIGNMENTS: 
LET RB.PRONO$=XF$[46]
RETURN

! 
! !!!!!  SWEETWATER RESERVE Division 35 ------
! _GET_RESERVE:
! LET RES.UDF_QTY_RESERVED=0
! STATIC UDTRESERVEFH
! IF NOT(UDTRESERVEFH) THEN {
! LET UDTRESERVEFH=%SYS_SS'OPENTABLE("SO_UDT_RESERVE","COMPANY")
!  }
! IF NOT(ARDIVISIONNO$="35") THEN {
! READ (UDTRESERVEFH,KEY=ITEMCODE$,REC=RES$,DOM=*NEXT)
!  }
! IF RES.UDF_QTY_RESERVED<0 THEN { LET RES.UDF_QTY_RESERVED=0 }
! RETURN 
! _UPDATE_RESERVE:
! LET RES.UDF_QTY_RESERVED=0
! STATIC UDTRESERVEFH
! IF NOT(UDTRESERVEFH) THEN {
! LET UDTRESERVEFH=%SYS_SS'OPENTABLE("SO_UDT_RESERVE","COMPANY")
!  }
! IF ARDIVISIONNO$="35" THEN {
! READ (UDTRESERVEFH,KEY=ITEMCODE$,REC=RES$,DOM=*NEXT)
! LET RES.UDF_QTY_RESERVED-=TEMP
! WRITE (UDTRESERVEFH,REC=RES$)
!  }
! RETURN 
